{"version":3,"sources":["pikachu.png","lightning.png","normal.png","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","setClicked","pkmnHP","setHP","className","pkmnName","src","lightning","alt","pkmnImg","normal","onClick","console","log","attack","heal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,MAA0B,oCCA1B,MAA0B,sCCA1B,MAA0B,mC,OCiG1BA,EA3FF,SAACC,GACV,MAA8BC,oBAAS,GAAvC,mBAAgBC,GAAhB,WACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAeC,EAAf,KAoBA,OACI,sBAAKC,UAAW,mBAAqBF,EAAS,GAAK,KAAO,IAA1D,UACI,yBAAQE,UAAU,cAAlB,UACI,sBAAMA,UAAU,YAAhB,mBACA,oBAAIA,UAAU,YAAd,SAA2BL,EAAMM,WACjC,sBAAKD,UAAU,UAAf,UACI,sBAAMA,UAAU,WAAhB,gBACA,sBAAMA,UAAU,YAAhB,SAA6BF,IAC7B,qBACIE,UAAU,YACVE,IAAKC,EACLC,IAAI,oBAIhB,sBAAKJ,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAWE,IAAKG,EAASD,IAAI,YAC5C,mBAAGJ,UAAU,YAAb,+DAIJ,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,2BAAf,SACI,qBACIA,UAAU,iBACVE,IAAKI,EACLF,IAAI,gBAGZ,sBAAMJ,UAAU,aAAhB,uBAEJ,mBAAGA,UAAU,YAAb,qHAKA,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,qBACIA,UAAU,iBACVE,IAAKC,EACLC,IAAI,cAER,qBACIJ,UAAU,iBACVE,IAAKI,EACLF,IAAI,iBAIZ,sBAAMJ,UAAU,aAAhB,0BACA,sBAAMA,UAAU,cAAhB,sBAGR,sBAAKA,UAAU,mBAAf,UACI,wBAAQA,UAAU,cAAcO,QAAS,kBA1EtC,SAACZ,GACRG,GAAU,IACVU,QAAQC,IAAId,EAAMM,SAAW,uBAC7BO,QAAQC,IAAI,yBACZV,EAAMD,EAAS,IACfD,GAAW,IAEXW,QAAQC,IAAId,EAAMM,SAAW,0BAmEsBS,CAAOf,IAAtD,mBAGA,wBAAQK,UAAU,cAAcO,QAAS,kBAnExC,SAACZ,GACVa,QAAQC,IAAId,EAAMM,SAAW,2BAC7BF,EAAM,IAiEiDY,CAAKhB,IAApD,+BC9DDiB,MAhBf,WACE,OACE,qBAAKZ,UAAU,iBAAf,SASE,cAAC,EAAD,CAAMC,SAAS,eCRNY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4f2be8c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pikachu.dc371dbb.png\";","export default __webpack_public_path__ + \"static/media/lightning.61fc2c67.png\";","export default __webpack_public_path__ + \"static/media/normal.08cceddf.png\";","import pkmnImg from '../pikachu.png';\nimport lightning from '../lightning.png';\nimport normal from '../normal.png';\nimport { useState } from 'react';\n/* import Banner from \"./Banner\"; */\n\nconst Card = (props) => {\n    const [clicked, setClicked] = useState(false);\n    const [pkmnHP, setHP] = useState(60);\n\n    const attack = (props) => {\n        if (pkmnHP >= 10) {\n            console.log(props.pkmnName + ' used Electro Ball!');\n            console.log('Opponent used Tackle!');\n            setHP(pkmnHP - 10);\n            setClicked(true);\n        } else {\n            console.log(props.pkmnName + ' cannot fight anymore!');\n        }\n    };\n    const heal = (props) => {\n        console.log(props.pkmnName + \"'s health was restored!\");\n        setHP(60);\n    };\n    const run = (props) => {\n        console.log(props.pkmnName + \" can't run away!\");\n    };\n\n    return (\n        <div className={'card-container ' + (pkmnHP < 10 ? 'bw' : '')}>\n            <header className=\"card-header\">\n                <span className=\"card-type\">BASIC</span>\n                <h1 className=\"pkmn-name\">{props.pkmnName}</h1>\n                <div className=\"hp-info\">\n                    <span className=\"hp-label\">HP</span>\n                    <span className=\"hp-number\">{pkmnHP}</span>\n                    <img\n                        className=\"type-icon\"\n                        src={lightning}\n                        alt=\"Type icon\"\n                    />\n                </div>\n            </header>\n            <div className=\"img-container \">\n                <img className=\"pkmn-img\" src={pkmnImg} alt=\"Pokemon\" />\n                <p className=\"pkmn-desc\">\n                    NO. 025 Mouse Pokémon HT 1'4\" WT 13.2 lbs.\n                </p>\n            </div>\n            <div className=\"card-content\">\n                <div className=\"move-header\">\n                    <div className=\"move-type-icon-container\">\n                        <img\n                            className=\"move-type-icon\"\n                            src={normal}\n                            alt=\"Move icon\"\n                        />\n                    </div>\n                    <span className=\"move-title\">Charge</span>\n                </div>\n                <p className=\"move-info\">\n                    Search your deck for a lightning energy card and attach it\n                    to this Pokémon. Then, shuffle your deck.\n                </p>\n\n                <div className=\"move-header\">\n                    <div className=\"move-type-icon-container\">\n                        <img\n                            className=\"move-type-icon\"\n                            src={lightning}\n                            alt=\"Move icon\"\n                        />\n                        <img\n                            className=\"move-type-icon\"\n                            src={normal}\n                            alt=\"Move icon\"\n                        />\n                    </div>\n\n                    <span className=\"move-title\">Electro Ball</span>\n                    <span className=\"move-number\">20</span>\n                </div>\n            </div>\n            <div className=\"button-container\">\n                <button className=\"card-button\" onClick={() => attack(props)}>\n                    Fight\n                </button>\n                <button className=\"card-button\" onClick={() => heal(props)}>\n                    Use potion\n                </button>\n                {/* <button className=\"card-button\" onClick={() => run(props)}>Run</button> */}\n            </div>\n            {/* <Banner pkmnName={props.pkmnName}/> */}\n        </div>\n    );\n};\n\nexport default Card;\n","\nimport './App.css';\n/* import Banner from './components/Banner'; */\n// import CardHeader from './components/CardHeader';\n// import CardImage from './components/CardImage';\n// import CardContent from './components/CardContent';\n// import CardButtons from './components/CardButtons';\nimport Card from './components/Card';\n\nfunction App() {\n  return (\n    <div className=\"main-container\">\n      {/* <div className=\"card-container\">\n        <CardHeader pkmnName=\"Pikachu\" pkmnHP=\"60\"/>\n        <CardImage/>\n        <CardContent/>\n        <CardButtons pkmnName=\"Pikachu\"/>\n        \n      </div>*/}\n      {/* <Banner pkmnName=\"Pikachu\"/> */}\n      <Card pkmnName=\"Pikachu\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}